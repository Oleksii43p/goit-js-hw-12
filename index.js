import{a as q,S as E,i}from"./assets/vendor-Dy2ZTtfi.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))d(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&d(c)}).observe(document,{childList:!0,subtree:!0});function e(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function d(t){if(t.ep)return;t.ep=!0;const s=e(t);fetch(t.href,s)}})();const P=15,u=async(r,o=1)=>(await q.get("https://pixabay.com/api/",{params:{key:"51410933-6e28737e6449aa5e8ee5fd880",q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:P,page:o}})).data;let p;const b=document.querySelector(".gallery");document.querySelector(".loader");const w=document.querySelector(".load-more"),L=r=>{const o=r.map(e=>`
      <li class="gallery-item">
        <a href="${e.largeImageURL}">
          <img src="${e.webformatURL}" alt="${e.tags}" />
        </a>
        <div class="info">
          <p><b>Likes:</b> ${e.likes}</p>
          <p><b>Views:</b> ${e.views}</p>
          <p><b>Comments:</b> ${e.comments}</p>
          <p><b>Downloads:</b> ${e.downloads}</p>
        </div>
      </li>`).join("");b.insertAdjacentHTML("beforeend",o),p?p.refresh():p=new E(".gallery a",{captionsData:"alt",captionDelay:250})},x=()=>{b.innerHTML=""},v=()=>{document.querySelector(".loader").classList.remove("hidden")},S=()=>{document.querySelector(".loader").classList.add("hidden")},M=()=>{w.classList.remove("hidden")},h=()=>{w.classList.add("hidden")},m={form:document.querySelector(".form"),button:document.querySelector(".load-more")};let l="",a=1;const R=15;let f=0;const $=async r=>{if(r.preventDefault(),h(),m.button.removeEventListener("click",y),l=r.target.elements["search-text"].value.trim(),!l){i.warning({title:"Warning",message:"Search field cannot be empty.",position:"topRight"});return}x(),a=1,v(),await new Promise(requestAnimationFrame),await u(l,a);try{const o=await u(l,a),e=o.hits;if(f=Math.ceil(o.totalHits/R),e.length===0){i.info({title:"No results",message:"Sorry, no images match your search query.",position:"topRight"});return}L(e),f>1?(M(),m.button.addEventListener("click",y)):(h(),i.info({title:"End of results",message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch(o){console.error(o),i.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"})}finally{S()}},y=async()=>{a+=1,v(),await new Promise(requestAnimationFrame),await u(l,a);try{const o=(await u(l,a)).hits;L(o);const{height:e}=document.querySelector(".gallery").firstElementChild.getBoundingClientRect();window.scrollBy({top:e*2+16,behavior:"smooth"}),a>=f&&(m.button.removeEventListener("click",y),h(),i.info({title:"End of results",message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch(r){console.error(r),i.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"})}finally{S()}};m.form.addEventListener("submit",$);const g=document.querySelector('input[name="search-text"]'),n=document.querySelector(".search-btn");document.querySelector(".input-wrapper");n.addEventListener("mouseenter",()=>{if(g.value.trim().length===0){const o=n.offsetWidth,e=n.offsetHeight,d=window.innerWidth-o,t=window.innerHeight-e,s=Math.random()*d,c=Math.random()*t;n.style.position="fixed",n.style.left=`${s}px`,n.style.top=`${c}px`}});g.addEventListener("input",()=>{g.value.trim().length>0&&(n.style.position="absolute",n.style.left="100%",n.style.top="0")});
//# sourceMappingURL=index.js.map
